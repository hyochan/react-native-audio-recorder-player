///
/// JPlaybackEndType.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "PlaybackEndType.hpp"



namespace margelo::nitro::audiorecorderplayer {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "PlaybackEndType" and the the Kotlin data class "PlaybackEndType".
   */
  struct JPlaybackEndType final: public jni::JavaClass<JPlaybackEndType> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/audiorecorderplayer/PlaybackEndType;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct PlaybackEndType by copying all values to C++.
     */
    [[maybe_unused]]
    [[nodiscard]]
    PlaybackEndType toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldDuration = clazz->getField<double>("duration");
      double duration = this->getFieldValue(fieldDuration);
      static const auto fieldCurrentPosition = clazz->getField<double>("currentPosition");
      double currentPosition = this->getFieldValue(fieldCurrentPosition);
      return PlaybackEndType(
        duration,
        currentPosition
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JPlaybackEndType::javaobject> fromCpp(const PlaybackEndType& value) {
      return newInstance(
        value.duration,
        value.currentPosition
      );
    }
  };

} // namespace margelo::nitro::audiorecorderplayer
